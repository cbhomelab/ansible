---
# Trigger Proxmox to provision VM
# Provide user with command for bootscrap script and wait for prompt to exit

- name: Create VM
  community.general.proxmox_kvm:
    api_user: '{{ pve_user }}'
    api_password: '{{ pve_pass }}'
    api_host: '{{ pve_host }}'
    name: '{{ hostname }}'
    vmid: '{{ vm_clone_id }}'
    newid: '{{ vm_id }}'
    node: '{{ vm_node }}'
    storage: '{{ vm_storage }}'
    clone: '{{ vm_clone }}'
    timeout: 180
  
    # autostart: '{{ vm_autostart }}'
    # net: '{{ vm_network }}'
    # cpu: '{{ vm_cpu }}'
    # cores: '{{ vm_cores }}'
    # memory: '{{ vm_ram }}'
    # virtio: '{{ vm_virtio }}'
    # hostpci: '{{ vm_hostpci }}'
    # machine: '{{ vm_machine }}'
    # sshkeys: '{{ ssh_key }}'
    # ciuser: '{{ my_user }}'
    # cipassword: '{{ my_password }}'

# Wait for user to check VM config

# - name: Waiting for user input
#   ansible.builtin.pause:
#     prompt: Ensure the settings for the VM are properly configured. Once complete, press return to continue. Press Ctrl+c and then "a" to abort

# Start VM

- name: Starting VM
  community.general.proxmox_kvm:
    api_user: '{{ pve_user }}'
    api_password: '{{ pve_pass }}'
    api_host: '{{ pve_host }}'
    name: '{{ hostname }}'
    vmid: '{{ vm_id }}'
    state: started

# Wait for user to complete installer

# - name: Waiting for user input
#   ansible.builtin.pause:
#     prompt: Complete the Installer! Once the VM has fully rebooted, press return to continue. Press Ctrl+c and then "a" to abort

# Create Initial Backup

# - name: Backup VM and set retention
#   community.general.proxmox_backup:
#     api_user: '{{ pve_user }}'
#     api_password: '{{ pve_pass }}'
#     api_host: '{{ pve_host }}'
#     bandwidth: 0
#     backup_mode: suspend
#     compress: zstd
#     compression_threads: 0
#     description: A single backup for {% raw %}{{ guestname }}{% endraw %}
#     mode: include
#     notification_mode: notification-system
#     protected: false
#     retention: keep-monthly=1, keep-weekly=1
#     storage: '{{ pve_backup }}'
#     vmids:
#       - '{{ vm_id }}'
